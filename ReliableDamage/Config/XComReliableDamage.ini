[ReliableDamage.X2AbilityToHitCalc_StandardAim_RD]
; 0 = Disabled
; 1 = Enabled
;
; Recommended value: 0. See below for detailed explanation.
;
; XCOM uses whole numbers (integers) for HP and damage (and more).
; Reliable Damage calculates the damage as decimal numbers, since we multiply the damage of the shot as calculated by XCom
; by the hit chance expressed as a decimal. We force XCom to calculate the damage value of every shot by making every shot
; a hit. In the original game this was obviously skipped when the shot would miss (this is determined first, before calculation).
;
; I want to stress this mod does *not* change the way the damage itself is calculated (at least, it shouldn't),
; a multiplier is simply added at the very end (the hit chance) and then a conversion back to an integer is applied.
;
; This mod offers 2 ways of converting the calculated reliable damage to an integer:
; 1) Round the decimal number
; 2) Convert the decimal number to a minimum value of Math.floor(decimal) and a maximum value of Math.ceil(decimal).
;    Based on the actual decimal number, assign percentages to both and roll for the integer final value.
;
; Examples:
; Consider the following 2 shots:
; A) Damage calculated by XCom: 4, original hit chance: 65% (actual damage: 4 * 0.65 = 2.60)
; B) Damage calculated by XCom: 7, original hit chance: 75% (actual damage: 7 * 0.35 = 2.45)
;
; === ROUNDING ENABLED ===
; When rounding is enabled, shots A and B will result in the following damage values
;
; A) 3 damage (+ 0.40 compared to actual damage)
; B) 2 damage (- 0.45 compared to actual damage)
;
; Be aware that with rounding enabled, some shots will always be favorable for you (when you gain damage -- see A)
; and others unfavorable (when you lose damage -- see B). I feel this makes the game less fair in certain situations.
; For example, early on you face Advent Troopers with only 3 HP (depending on difficulty of course).
; Rookies deal 4 damage (spread is removed, and there are no other parameters in play this early in the game),
; meaning that already at 63% you will insta-kill Advent Troopers (4 * 0.63 = 2.52 => Round => 3 damage).
; This feels too strong. Of course, the inverse can also happen where you consistently lose damage on shots (the same 4 damage shot would lose damage
; between 76% and 87%, for example, since all those values around rounded down to 3 but the actual damage is always more than 3).
;
; To remedy this, an alternative option has been developed, which will be explained below.
;
; === ROUNDING DISABLED ===
; When rounding is disabled, shots A and B will result in the following damage values
;
; A) 2 (40%) to 3 (60%) damage (expected value: 2 * 0.40 + 3 * 0.60 = 2.60)
; B) 2 (55%) to 3 (45%) damage (expected value: 2 * 0.55 + 3 * 0.45 = 2.45)
;
; The percentages are assigned based on the actual damage, so that the expected value matches the actual damage.
; Of course the actual damage dealt during a game can still be exactly equivalent to when rounding is enabled,
; based on the RNG. Using RNG goes against my philosophy for this mod in the first place, but I feel it is justified
; to make this mod more balanced. There is still RNG involved in the damage calculation anyway, with for example the PlusOne mechanic
; that I have not touched.
; Remember it is still way more reliable than standard XCOM, since you will always
; deal at least the minimum amount of damage (2 in these examples).
;
; Last note; to largely circumvent the discussed issues of decimal -> integer conversion, an "easy in theory" solution would be
; to multiply all involved properties (HP / Armor / Damage / Shred / etc.) by 10 or 100 and then just round the values.
; The impact of rounding is much smaller (a factor of 10 or 100, respectively). With x10 for example, shot A would simply deal 40 * 0.65 = 26 damage (its exact amount)
; and shot B would deal 70 * 0.35 = 24.5 => Round => 25 damage. In the latter case, the difference is only 0.5 damage from 24.5 damage which is only
; ~2%. Much different from the original rounding example (0.45 lost on 2.45 = ~18%).

; However, while probably possible in theory, changing all involved properties through configuration takes so much time when things cannot be pattern-matched
; (weapons and character stats use the same format so are easy to change all at once), and when trying this approach I had a lot of issues scanning through all
; the other ini files looking for HP / Armor / etc. values of various things. I'm also afraid changing so extremely many properties will break all compatibility with other
; mods.
RoundingEnabled=0

; The minimum damage and/or hit chance required to deal to an Overwatching unit in order to remove Overwatch.
; Damage blocked by Armor does *not* count, damage absorbed by Shield *does*, as Shield is just extra HP
; while Armor is damage reduction.
; By default, any damage removes Overwatch, but with 100% hit chance on shots this might be too strong
; so it is made configurable.
; You can combine these settings and both minimum values have to be passed for Overwatch to be removed.
; For example, when minimum damage is set to 2 and minimum hit chance is set to 60
; the shot has to deal BOTH 2 damage and have at least a 60% hit chance.
; Damage and hit chance are obviously related in this mod, so generally you'd only set one of the options
; and leave the other one at 0. Hit chance scales better towards the late game and is recommended over damage.
OverwatchRemovalMinimumDamage=2
OverwatchRemovalMinimumHitChance=50

; The Crit Shots can be removed, by incorporating their effects into each shot instead.
; For example, if you have a Ranger with 40% Crit Chance and +4 Crit Damage, removing Crit Chance will
; increase that shot with 0.4 * 4 = 1.6 damage, but in return completely removes the chance for a Critical Hit.
; This amounts to the same damage in the long run, just without the RNG of actually getting a Critical Hit when you need it.
; To keep Crit like in regular XCOM, set this to 1.
KeepCrit=0
; Likewise for Graze, when removing this a unit that has a Graze Chance > 0 will take less damage on each shot
; but the chance to get a Graze Shot is completely removed. For example, a unit with a 25% chance to Graze a shot,
; and the Graze Multiplier (the % of the original damage that would be dealt) is 60% would result in all damage to
; the unit being multiplied by [0.6 + ((1 - 0.25) * (1 - 0.6))] = 0.90 (= 90%).
; To proof this is the same (it's not easy to see), consider a soldier with 5 damage taking 4 shots at the unit
; that has the Graze Chance (e.g. Viper, Archon, etc). Assume for now the shot has 100% hit chance, so don't worry about missing.
; When Graze shots are enabled (= regular XCOM), we expect to have 1 Graze shot and 3 regular shots (25% Graze), which
; amounts to (3 * 5) + (0.6 * 5) = 15 + 3 = 18 damage.
; With Graze removed in this mod, every shot would simply deal 90% of the damage, which is 5 * 0.9 = 4.5 damage.
; After 4 shots, that means 4 * 4.5 = 18 damage. The same as with Graze Shots, just less random.
; To keep Graze like in regular XCOM, set this to 1.
KeepGraze=0

[ReliableDamage.Main]
; All damage spread from weapons / abilities is removed by default as
; this only adds more variance and does not change expected damage values at all.
; Set it to 0 to leave damage spread untouched.
RemoveDamageSpread=1
